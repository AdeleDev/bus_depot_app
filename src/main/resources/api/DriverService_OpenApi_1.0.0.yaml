openapi: 3.0.3
info:
  title: Driver management service
  description: This is a sample API of Driver management service.
  version: 1.0.0
servers:
  - url: 'https://driver.service.com/v1'
  - url: 'http://driver.service.com/v1'
tags:
  - name: driver
    description: Information about drivers working in bus depot
paths:
  /driver:
    put:
      tags:
        - driver
      summary: Update an existing driver
      operationId: updateDriver
      requestBody:
        description: Update driver
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Driver'
        required: true
      responses:
        '204':
          description: Successful operation
        '400':
          description: Invalid ID supplied
          content: { }
        '404':
          description: house not found
          content: { }
        '405':
          description: Validation exception
          content: { }
      x-codegen-request-body-name: body
    post:
      tags:
        - driver
      summary: Add a new driver
      operationId: addDriver
      requestBody:
        description: Add a new driver
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Driver'
        required: true
      responses:
        '204':
          description: Successful operation
        '405':
          description: Invalid input
          content: { }
      x-codegen-request-body-name: body
  # /driver/{driverId}/stuck:
  #   get:
  #     tags:
  #       - driver
  #     summary: This operation stuck for 3 minutes and then return 404 error code
  #     operationId: getStuck
  #     parameters:
  #       - name: driverId
  #         in: path
  #         description: ID of driver to return
  #         required: true
  #         schema:
  #           type: integer
  #           format: int64
  #     responses:
  #       '404':
  #         description: Invalid status value
  #         content: { }
  /driver/{driverId}:
    get:
      tags:
        - driver
      summary: Find driver by ID
      operationId: getHouseById
      parameters:
        - name: driverId
          in: path
          description: ID of driver to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Driver'
        '400':
          description: Invalid ID supplied
          content: { }
        '404':
          description: house not found
          content: { }
    delete:
      tags:
        - driver
      summary: Deletes a driver profile
      operationId: deleteDriver
      parameters:
        - name: driverId
          in: path
          description: Driver id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '404':
          description: Driver not found
          content: { }
components:
  schemas:
    Driver:
      required:
        - firstname
        - lastname
        - birth
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstname:
          type: string
          example: John
          minLength: 1
          maxLength: 20
        lastname:
          type: string
          example: Doe
          minLength: 1
          maxLength: 20
        birth:
          description: Date of birth. Validation rule - our system doesn't support years before 1950
          type: string
          example: 10.02.1990
          format: date
      xml:
        name: House
